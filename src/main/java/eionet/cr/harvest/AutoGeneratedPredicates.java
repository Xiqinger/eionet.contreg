/*
* The contents of this file are subject to the Mozilla Public
* 
* License Version 1.1 (the "License"); you may not use this file
* except in compliance with the License. You may obtain a copy of
* the License at http://www.mozilla.org/MPL/
* 
* Software distributed under the License is distributed on an "AS
* IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
* implied. See the License for the specific language governing
* rights and limitations under the License.
* 
* The Original Code is Content Registry 2.0.
* 
* The Initial Owner of the Original Code is European Environment
* Agency. Portions created by Tieto Eesti are Copyright
* (C) European Environment Agency. All Rights Reserved.
* 
* Contributor(s):
* Jaanus Heinlaid, Tieto Eesti*/
package eionet.cr.harvest;

import java.util.ArrayList;

import eionet.cr.common.Predicates;
import eionet.cr.util.Hashes;

/**
 * 
 * @author <a href="mailto:jaanus.heinlaid@tietoenator.com">Jaanus Heinlaid</a>
 *
 */
public class AutoGeneratedPredicates extends ArrayList<String>{

	/** */
	private static AutoGeneratedPredicates instance;

	/** */
	private ArrayList<Long> hashes;

	/**
	 * 
	 */
	static{
		instance = new AutoGeneratedPredicates();
	}

	/**
	 * 
	 */
	private AutoGeneratedPredicates(){
		
		super();
		
		// NB! Triples with the below predicates should be considered auto-generated only
		// when the triple's SOURCE is 0
		add(Predicates.CR_BYTE_SIZE);
		add(Predicates.CR_SCHEMA);
		add(Predicates.CR_LAST_REFRESHED);
		add(Predicates.CR_LAST_MODIFIED);
		add(Predicates.CR_MEDIA_TYPE);
		add(Predicates.CR_CHARSET);
		add(Predicates.RDF_TYPE);
		
		hashes = new ArrayList<Long>();
		for (String predicateUri : this){
			hashes.add(Long.valueOf(Hashes.spoHash(predicateUri)));
		}
	}
	
	/**
	 * 
	 * @return
	 */
	public static ArrayList<Long> getHashes(){
		
		return instance.hashes;
	}
}
