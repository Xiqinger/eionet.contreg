existing.intproperty = 1000
wrong.intproperty = badbadbad

# indicates the application current version
application.version=3.0

# the User-Agent to expose when doing web crawling
application.userAgent=Content Registry/{0}

# location of the folder where harvester collects its temporary files
harvester.tempFileDir=${config.harvester.tempFileDir}

# XmlConv's URL where CR can get the list of conversion for a given schema
xmlconv.listConversions.url=http://converters.eionet.europa.eu/api/listConversions?schema={0}

# MS-Excel exporter row limit.
exporter.xls.row.limit=3000

virtuoso.cr.ruleset.name=CRInferenceRule

# The application's home URL. It should be a full URL up to the webapp context path (the latter being included).
# Examples:
#    http://127.0.0.1:8080/cr
#    http://cr.eionet.europa.eu
# This property is used to construct URLs of users' home directories. The latter, in turn, is used to construct
# URLs of user's registrations, bookmarks, etc.
application.homeURL=${config.application.homeURL}

# Virtuoso db connection properties.
virtuoso.db.drv=virtuoso.jdbc4.Driver
virtuoso.db.url=${config.virtuoso.unittest.db.url}
virtuoso.db.usr=${config.virtuoso.unittest.db.usr}
virtuoso.db.pwd=${config.virtuoso.unittest.db.pwd}

#Read-only user for SPARQL endpoint.
virtuoso.db.rousr=${virtuoso.db.rousr}
virtuoso.db.ropwd=${virtuoso.db.ropwd}

# Full path to the file system folder where CR should store its user-uploaded files
filestore.path=${config.filestore.path}

# If true, the unit tests can assume that full text real-time RDF indexing has been activated in the Virtuoso that the tests use.
# Possible values: true/false.
virtuoso.unittest.realTimeFullTextIndexing=${virtuoso.unittest.realTimeFullTextIndexing}

# testing properties with second, minute and hour values
timeproperty.minute.ordinary=60m
timeproperty.minute.gaps= 60   m
timeproperty.minute.capital= 60 M
timeproperty.minute.faulty1=60 min
timeproperty.minute.faulty2=60 mmm
timeproperty.second.ordinary=60s
timeproperty.second.faulty=60sec
timeproperty.hour.ordinary=2h
timeproperty.millisecond.ordinary=2ms
timeproperty.millisecond.underminute=59950ms
timeproperty.millisecond.overminute=60150ms
timeproperty.millisecond.over10minute=600150ms
timeproperty.millisecond.nosuffix=123
timeproperty.millisecond.empty=

# Interval for the source deletion background job. Default is every 20000 ms, i.e. every 20 seconds.
sourceDeletionJob.interval=${config.sourceDeletionJob.interval}

# Comma-separated list of hours when the source deletion background job should be active (valid values are 0-23).
# The default is 19,20,21,22,23,0,1,2,3,4,5,6,7,15,16,17,18. Leave empty for disabling this job!
sourceDeletionJob.activeHours=${config.sourceDeletionJob.activeHours}

# Number of sources that the source deletion background job should delete during one run. Default is 20.
sourceDeletionJob.batchSize=${config.sourceDeletionJob.batchSize}
